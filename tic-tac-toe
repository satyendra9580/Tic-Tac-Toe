//HTML PART

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Tic-Tac-Toe</title>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <div class="board" id="board">
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
        <div class="cell" onclick="makeMove(this)"></div>
    </div>
    <p id="message"></p>
    <button onclick="resetGame()">Reset Game</button>
    <script src="script.js"></script>
</body>
</html>


//CSS PART

body {
    font-family: Arial, sans-serif;
    text-align: center;
}

.board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 5px;
    margin: 20px auto;
    width: 300px;
}

.cell {
    width: 100px;
    height: 100px;
    background-color: lightgray;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
}

button {
    display: block;
    margin: 20px auto;
    padding: 10px 20px;
    font-size: 18px;
    background-color: dodgerblue;
    color: white;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: royalblue;
}


// JS part

let currentPlayer = "X";
let board = ["", "", "", "", "", "", "", "", ""];
let gameWon = false;

const winningCombos = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
];

const cells = document.querySelectorAll(".cell");
const message = document.getElementById("message");

function makeMove(cell) {
    const index = Array.from(cells).indexOf(cell);

    if (board[index] === "" && !gameWon) {
        board[index] = currentPlayer;
        cell.textContent = currentPlayer;
        cell.style.backgroundColor = currentPlayer === "X" ? "dodgerblue" : "tomato";
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        checkWinner();
    }
}

function checkWinner() {
    for (const combo of winningCombos) {
        const [a, b, c] = combo;
        if (board[a] && board[a] === board[b] && board[a] === board[c]) {
            message.textContent = `${board[a]} wins!`;
            gameWon = true;
            highlightWinningCombo(combo);
            return;
        }
    }

    if (board.every((cell) => cell !== "")) {
        message.textContent = "It's a draw!";
    }
}

function highlightWinningCombo(combo) {
    combo.forEach((index) => {
        cells[index].style.backgroundColor = "limegreen";
    });
}

function resetGame() {
    currentPlayer = "X";
    board = ["", "", "", "", "", "", "", "", ""];
    gameWon = false;
    message.textContent = "";
    cells.forEach((cell) => {
        cell.textContent = "";
        cell.style.backgroundColor = "lightgray";
    });
}

resetGame();
